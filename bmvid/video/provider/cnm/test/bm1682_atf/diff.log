diff --git a/bl31/bl31_main.c b/bl31/bl31_main.c
index bfdcc47..bc9afc4 100755
--- a/bl31/bl31_main.c
+++ b/bl31/bl31_main.c
@@ -178,13 +178,13 @@ void test_cnm(void)
 
     param.bitstreamMode = 0;        //BS_MODE_INTERRUPT
 #if defined(CODA960)    
-    param.bitFormat = 0;            //STD_AVC H264 standard
+    param.bitFormat = 12;            //STD_AVC H264 standard
     param.coreIdx = 0;             // core 0 for boda960
-    param.enableWTL = 0;
+    param.enableWTL = 1;
     param.frameEndian = 0;
     param.streamEndian = 0;         // VDI_LITTLE_ENDIAN
-    param.mapType = TILED_FRAME_V_MAP; //LINEAR_FRAME_MAP;      // TILED_FRAME_MB_RASTER_MAP; 
-    param.cbcrInterleave = 0;       // set to non-interleave to save time
+    param.mapType = COMPRESSED_FRAME_MAP;	//TILED_FRAME_V_MAP; //LINEAR_FRAME_MAP;      // TILED_FRAME_MB_RASTER_MAP; 
+    param.cbcrInterleave = 0;
 #elif defined(WAVE512)
     param.bitFormat = 12;           // STD_HEVC standard
     param.coreIdx = 0;             // core 1 for wave512
@@ -195,15 +195,15 @@ void test_cnm(void)
     param.cbcrInterleave = 0;
 #endif
     param.coda9.enableMvc = 0;      // disable MVC
-    param.coda9.enableTiled2Linear = 1; // enable tiled to linear mapping for display
-    param.coda9.tiled2LinearMode = 1;    // frame map
+    param.coda9.enableTiled2Linear = 0; // enable tiled to linear mapping for display
+    param.coda9.tiled2LinearMode = 0;    // frame map
 	if (param.coda9.enableTiled2Linear)
 		param.coda9.enableBWB = 0;
 	else
 		param.coda9.enableBWB = 1;          // enable 8 burst in linear mode, disable it when enableTiled2Linear=1 for performance
     param.coda9.enableDeblock = 0;      // not available for AVC
     param.coda9.mp4class = 0;            // not available for mpeg4
-    param.coda9.frameCacheBypass = 0;   // MC/ME cache enable (To be optimized)
+    param.coda9.frameCacheBypass = 3;   // MC/ME cache enable (To be optimized)
     param.coda9.frameCacheBurst = 0;    // burst 4 / 8 selection (to be opitmized)
     param.coda9.frameCacheMerge = 0;     // horizontal without merge (to be optimized)
     param.coda9.frameCacheWayShape = 0;  // chroma cache way/luma cache way
@@ -215,12 +215,12 @@ void test_cnm(void)
     param.wave.bwOptimization = 1;     // only valid for WTL enable case
     param.wave.numVCores = 1;
    
-    param.wtlMode = 1;                  // frame linear map mode
+    param.wtlMode = 2;                  // frame linear map mode
     param.wtlFormat = 0;                // FORMAT_420
 
     param.nv21 = 0;                     // nv12
 
-    param.secondaryAXI = 0x3;           // enable secondary AXI for H264 // 4k wave, 0xE000 is not enough
+    param.secondaryAXI = 0x3;           // enable secondary AXI for H264
 
     param.inputPath[0] = '\0';      // feed data into 0xF0000000 in advanced.
     param.enableUserData = 0;       // no user data reported
@@ -229,7 +229,7 @@ void test_cnm(void)
     param.bsSize = 0x400000;        // 4M for ES buffer
     param.feedingMode = 0;          // fixed size feeding
 
-    param.compareType = 1; // 1 - YUV compare (param.refYuvPath to be set), 0 - NO compare 2 - MD5
+    param.compareType = 0; // 1 - YUV compare (param.refYuvPath to be set), 0 - NO compare 2 - MD5
     param.refYuvPath[0] = '\0';
     param.md5Path[0] = '\0';
     p = "dump.yuv";
