##############################################################################
#
#    Copyright (c) 2016-2022 by Bitmain Technologies Inc. All rights reserved.
#
#    The material in this file is confidential and contains trade secrets
#    of Bitmain Technologies Inc. This is proprietary information owned by
#    Bitmain Technologies Inc. No part of this work may be disclosed,
#    reproduced, copied, transmitted, or used in any way for any purpose,
#    without the express written permission of Bitmain Technologies Inc.
#
##############################################################################

#If you want to use gdb debug, this should be set to 1 (needed in soc version) 
DEBUG                    ?= 1

#in mips-loongson server
MIPS			 ?= 0

#in shenwei server
SW64                     ?= 0

#in loongson arch64 server
LOONGARCH64              ?= 0

USING_CXX11_ABI          ?= 1

CROSS_COMPILE  ?=
ifneq ("$(CROSS_COMPILE)","")
  CC     := $(CROSS_COMPILE)gcc
  CXX    := $(CROSS_COMPILE)g++
  AR     := $(CROSS_COMPILE)ar
  AS     := $(CROSS_COMPILE)as
  LD     := $(CROSS_COMPILE)ld
  RANLIB := $(CROSS_COMPILE)ranlib
  STRIP  := $(CROSS_COMPILE)strip
else
  COMPILE_PREFIX  =  $(NETCOMPILER_TOP)/../bm_prebuilt_toolchains/x86-64-core-i7--glibc--stable/bin/x86_64-linux-
  CC     := $(COMPILE_PREFIX)gcc
  CXX    := $(COMPILE_PREFIX)g++
  AR     := $(COMPILE_PREFIX)ar
  AS     := $(COMPILE_PREFIX)as
  LD     := $(COMPILE_PREFIX)ld
  RANLIB := $(COMPILE_PREFIX)ranlib
  STRIP  := $(COMPILE_PREFIX)strip
  
endif

ifneq ($(shell which ccache),)
    CC := ccache $(CC)
    CXX := ccache $(CXX)
endif

RM     := rm -rf
CP     := cp -rf
MV     := mv
MKDIR  := mkdir -p

##############################################################################
# Global flags.
##############################################################################

ifeq ($(CONFIG_FLAGS), )
  CONFIG_FLAGS  =
endif

ifeq ($(USING_CMODEL),1)
CONFIG_FLAGS    += -DUSING_CMODEL
endif

CFLAGS          = -Wall -Werror $(CONFIG_FLAGS)
CXXFLAGS        = -Wall -Werror $(CONFIG_FLAGS)
CFLAGS          += -ffunction-sections -fdata-sections
CXXFLAGS        += -ffunction-sections -fdata-sections -fno-strict-aliasing
CXXFLAGS        += -std=c++11

ifeq ("$(USING_CXX11_ABI)", "0")
  CXXFLAGS      += -D_GLIBCXX_USE_CXX11_ABI=0
endif

CFLAGS          += -fPIC
CXXFLAGS        += -fPIC

LDFLAGS         += -pthread -ldl
LDFLAGS         += -Wl,--check-sections \
                   -Wl,--gc-sections \
                   -Wl,--unresolved-symbols=report-all
ifeq ("$(MIPS)", "1")
  LDFLAGS	+= -Wl,-melf64ltsmip
  LDFLAGS	+= -mips64r2 -mabi=64 -march=gs464e
  CFLAGS 	+= -mips64r2 -mabi=64 -march=gs464e
  CXXFLAGS	+= -mips64r2 -mabi=64 -march=gs464e
endif

ifeq ("$(LOONGARCH64)", "1")
  LDFLAGS       += -Wl,-melf64loongarch
endif

ifeq ($(SW64), 1)
CFLAGS          += --machine=sw6b
CXXFLAGS        += --machine=sw6b
endif

ifeq ($(DEBUG),1)
CFLAGS          += -g -DDEBUG
CXXFLAGS        += -g -DDEBUG
LDFLAGS         += -rdynamic
else
CFLAGS          += -O3
CXXFLAGS        += -O3
endif

#ifneq (,$(CROSS_COMPILE))
#CFLAGS          += -fno-unwind-tables -fno-short-enums
#CXXFLAGS        += -fexceptions -fno-rtti -fno-unwind-tables -fno-short-enums
#else
CFLAGS          += -funwind-tables -fno-short-enums
CXXFLAGS        += -funwind-tables -fno-short-enums
#endif

